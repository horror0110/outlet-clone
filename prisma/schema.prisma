// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  surname       String
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
}

model Category {
  id    String  @id @default(cuid()) @map("_id")
  title String?
  slug  String
}

model Product {
  id          String   @id @default(cuid()) @map("_id")
  category    String[]
  savings     Int?
  star        Int?
  color       String[]
  price       Int?
  salePrice   Int?
  balance     Boolean?
  title       String?
  description String?
  images      String[]
}

model Cart {
  id          String   @id @default(cuid()) @map("_id")
  category    String[]
  savings     Int
  star        Int
  color       String[]
  price       Int
  quantity    Int?
  salePrice   Int
  balance     Boolean
  title       String
  description String
  images      String[]
  email       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Checkout {
  id           String @id @default(cuid()) @map("_id")
  email        String
  totalPrice   Int
  title        String
  quantity     Int
  price        Int
  productPrice Int
  image        String
}
